--- a/Makefile	2017-05-19 15:14:34.958447918 +0300
+++ b/Makefile	2017-05-19 15:25:04.340878424 +0300
@@ -28,6 +28,9 @@
 
 E2_OPTS = -quiet -bin -boot0
 
+ifeq ($(RBOOT_CONFIG_OPROG),1)
+	CFLAGS += -DBOOT_CONFIG_OPROG
+endif
 ifeq ($(RBOOT_BIG_FLASH),1)
 	CFLAGS += -DBOOT_BIG_FLASH
 endif
--- a/rboot.c	2017-05-19 15:14:34.958447918 +0300
+++ b/rboot.c	2017-05-19 15:33:16.569743767 +0300
@@ -300,6 +300,7 @@
 
 	rboot_config *romconf = (rboot_config*)buffer;
 	rom_header *header = (rom_header*)buffer;
+	int config_need_init = 0;
 
 #if defined BOOT_DELAY_MICROS && BOOT_DELAY_MICROS > 0
 	// delay to slow boot (help see messages when debugging)
@@ -395,9 +396,26 @@
 		|| romconf->chksum != calc_chksum((uint8*)romconf, (uint8*)&romconf->chksum)
 #endif
 		) {
-		// create a default config for a standard 2 rom setup
-		ets_printf("Writing default boot config.\r\n");
-		ets_memset(romconf, 0x00, sizeof(rboot_config));
+		config_need_init = 1;
+	}
+
+	if (config_need_init
+#ifdef BOOT_CONFIG_OPROG
+		|| (romconf->count == 1) /* pre-flashed Oprog configuration */
+#endif
+			) {
+#ifdef BOOT_CONFIG_OPROG
+		if (config_need_init) {
+#endif
+			// create a default config for a standard 2 rom setup
+			ets_printf("Writing default boot config.\r\n");
+			ets_memset(romconf, 0x00, sizeof(rboot_config));
+
+#ifdef BOOT_CONFIG_OPROG
+		} else {
+			ets_printf("Writing corrected boot config.\r\n");
+		}
+#endif
 		romconf->magic = BOOT_CONFIG_MAGIC;
 		romconf->version = BOOT_CONFIG_VERSION;
 		default_config(romconf, flashsize);
--- a/rboot.h	2017-05-19 15:12:16.804693429 +0300
+++ b/rboot.h	2017-05-19 15:33:35.317474706 +0300
@@ -94,6 +94,28 @@
 #define MAX_ROMS 4
 #endif
 
+#ifdef BOOT_CONFIG_OPROG
+typedef unsigned short int uint16;
+
+#define OPROG_MAGIC					0xb6c3
+#define OPROG_NODE_NAME_SIZE_MAX	32  /* =max of SSID length, see 802.11-2007, we use 31 + terminating 0 */
+#define OPROG_AP_PASS_SIZE_MAX		32  /* we use 31 + terminating 0 */
+
+#define OPROG_BCONF_INIT		0x0001	///< Config contains pre-flashed settings
+#define OPROG_BCONF_NODE_INFO	0x0002	///< Config contains information about Oprog-node installed (app_version and node_name)
+
+typedef struct {
+	uint16 magic;	///< Magic, identifies rBoot Oprog data, used uint16 to distinct it from uint8 chksum
+	uint16 flags;
+
+	uint32 app_version; ///< LE value of app verison
+	char node_name[OPROG_NODE_NAME_SIZE_MAX];
+
+	char ap_ssid[32];
+	char ap_pass[OPROG_AP_PASS_SIZE_MAX];
+} rboot_config_oprog;
+#endif /* BOOT_CONFIG_OPROG */
+
 /** @brief  Structure containing rBoot configuration
  *  @note   ROM addresses must be multiples of 0x1000 (flash sector aligned).
  *          Without BOOT_BIG_FLASH only the first 8Mbit (1MB) of the chip will
@@ -113,6 +135,11 @@
 	uint8 count;           ///< Quantity of ROMs available to boot
 	uint8 unused[2];       ///< Padding (not used)
 	uint32 roms[MAX_ROMS]; ///< Flash addresses of each ROM
+
+#ifdef BOOT_CONFIG_OPROG
+	rboot_config_oprog oprog;
+#endif
+
 #ifdef BOOT_CONFIG_CHKSUM
 	uint8 chksum;          ///< Checksum of this configuration structure (if BOOT_CONFIG_CHKSUM defined)
 #endif
